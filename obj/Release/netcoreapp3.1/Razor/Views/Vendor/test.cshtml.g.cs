#pragma checksum "D:\Mano\Bookit_FinalV3\Bookit_Final\bookitwebapp\Views\Vendor\test.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5f670401140d022cd7d6236037d106b79acefc56"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Vendor_test), @"mvc.1.0.view", @"/Views/Vendor/test.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Mano\Bookit_FinalV3\Bookit_Final\bookitwebapp\Views\_ViewImports.cshtml"
using bookitwebapp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Mano\Bookit_FinalV3\Bookit_Final\bookitwebapp\Views\_ViewImports.cshtml"
using bookitwebapp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5f670401140d022cd7d6236037d106b79acefc56", @"/Views/Vendor/test.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"90c667a08a738ef9c73eb9dda6ccf58d22deb21d", @"/Views/_ViewImports.cshtml")]
    public class Views_Vendor_test : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Mintues", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Hours", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Days", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Slots", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/page/admin/dashboard/vendorProfile.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\Mano\Bookit_FinalV3\Bookit_Final\bookitwebapp\Views\Vendor\test.cshtml"
  
    ViewData["Title"] = "test";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<main>
    <div class=""container-fluid pl-70 pr-70"">
        <div class=""row"">
            <div class=""col-md-12"">
                <div class=""row"">
                    <!-- Booking lists -->
                    <div class=""col-md-6 mt-30"">
                        <div class=""card "">
                            <div class=""card-body"">
                                <ul class=""bookings"">
                                    <li>
                                        Packages
                                        <b>200</b>
                                        <span class=""counts green"">+33.45%</span>
                                        <div class=""progress"">
                                            <div class=""progress-bar bg-green"" style=""width:30%""></div>
                                        </div>
                                    </li>
                                    <li>
                                        Sub Services
                                      ");
            WriteLiteral(@"  <b>50</b>
                                        <span class=""counts orange"">+33.45%</span>
                                        <div class=""progress"">
                                            <div class=""progress-bar bg-red"" style=""width:60%""></div>
                                        </div>
                                    </li>
                                    <li>
                                        Services
                                        <b>20</b>
                                        <span class=""counts dark"">+33.45%</span>
                                        <div class=""progress"">
                                            <div class=""progress-bar bg-dark"" style=""width:20%""></div>
                                        </div>
                                    </li>
                                    <li>
                                        Requests
                                        <b>60</b>
                                        <s");
            WriteLiteral(@"pan class=""counts blue"">+33.45%</span>
                                        <div class=""progress"">
                                            <div class=""progress-bar bg-blue"" style=""width:50%""></div>
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <!-- Booking lists -->
                    <!-- Appointment Information -->
                    <div class=""col-md-12 mt-30"">
                        <div class=""card appointment-information"">
                            <div class=""card-body p-30"">
                                <h3>Services & Packages</h3>
                                <div class=""row"">
                                    <div class=""col-md-7"">
                                        <ul class=""nav nav-tabs mt-30"" id=""myTab"" role=""tablist"">
                                           ");
            WriteLiteral(@" <li class=""nav-item"">
                                                <a class=""nav-link active"" id=""Package-tab"" data-toggle=""tab"" href=""#Package"" role=""tab"" aria-controls=""Package"" aria-selected=""true"">Packages</a>
                                            </li>
                                            <li class=""nav-item"">
                                                <a class=""nav-link"" id=""profile-tab"" data-toggle=""tab"" href=""#profile"" role=""tab"" aria-controls=""profile"" aria-selected=""false"">Sub Services</a>
                                            </li>
                                            <li class=""nav-item"">
                                                <a class=""nav-link"" id=""profile-tab"" data-toggle=""tab"" href=""#services"" role=""tab"" aria-controls=""profile"" aria-selected=""false"">Services</a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
 ");
            WriteLiteral(@"                               <div class=""tab-content"" id=""myTabContent"">
                                    <div class=""tab-pane fade show active"" id=""Package"" role=""tabpanel"" aria-labelledby=""Package-tab"">
                                        <div class=""row mt-30"">
                                            <div class=""col-md-1"">
                                                <div class=""form-group"">
                                                    <label>Show Records</label>
                                                    <select class=""form-control"" id=""em2"">
                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5610629", async() => {
                WriteLiteral("10");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5611640", async() => {
                WriteLiteral("20");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5612651", async() => {
                WriteLiteral("30");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5613662", async() => {
                WriteLiteral("40");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5614673", async() => {
                WriteLiteral("50");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                    </select>
                                                </div>
                                            </div>
                                            <div class=""col-md-2"">
                                                <div class=""form-group"">
                                                    <label>Select Sub Service</label>
                                                    <select class=""form-control"" id=""em2"">
                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5616183", async() => {
                WriteLiteral("10");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5617194", async() => {
                WriteLiteral("20");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5618205", async() => {
                WriteLiteral("30");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5619216", async() => {
                WriteLiteral("40");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5620227", async() => {
                WriteLiteral("50");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                    </select>
                                                </div>
                                            </div>
                                            <div class=""col-md-2"">
                                                <div class=""form-group"">
                                                    <label>Select Service</label>
                                                    <select class=""form-control"" id=""em2"">
                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5621733", async() => {
                WriteLiteral("10");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5622744", async() => {
                WriteLiteral("20");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5623755", async() => {
                WriteLiteral("30");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5624766", async() => {
                WriteLiteral("40");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5625777", async() => {
                WriteLiteral("50");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                    </select>
                                                </div>
                                            </div>
                                            <div class=""col-md-2 ml-auto"">
                                                <div class=""form-group mt-25"">
                                                    <input type=""text"" class=""form-control"" placeholder=""Search..."">
                                                </div>
                                            </div>
                                            <div class=""col-md-2"">
                                                <a href=""#"" class=""btn btn--four float-right mt-20"" data-toggle=""modal"" data-target="".add-package""><span class=""plus"">+</span> Add New</a>
                                            </div>
                                            <!-- Add Package -->
                                            <div class=""modal fade add-package"" tabindex=""-1"" r");
            WriteLiteral(@"ole=""dialog"" aria-labelledby=""myLargeModalLabel"" aria-hidden=""true"">
                                                <div class=""modal-dialog modal-lg modal-dialog-centered"">
                                                    <div class=""modal-content"">
                                                        <div class=""modal-header"">
                                                            <h5 class=""modal-title pt-20"" id=""exampleModalLongTitle"">
                                                                Add Package
                                                            </h5>
                                                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                                                <span aria-hidden=""true"">&times;</span>
                                                            </button>
                                                        </div>
                                         ");
            WriteLiteral("               <div class=\"modal-body\">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5628997", async() => {
                WriteLiteral(@"
                                                                <div class=""form-row mb-20"">
                                                                    <div class=""col-md-6"">
                                                                        <label for=""ddlpackagemaincategory"">Main Category</label>
                                                                        <select class=""form-control"" id=""ddlpackagemaincategory"" required>
                                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5629798", async() => {
                    WriteLiteral("Select Main Category");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                                        </select>
                                                                    </div>
                                                                    <div class=""col-md-6"">
                                                                        <label for=""ddlpackagemainservice"">Main Service</label>
                                                                        <select class=""form-control"" id=""ddlpackagemainservice"" required>
                                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5631429", async() => {
                    WriteLiteral("Select Main Service");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                                        </select>
                                                                    </div>
                                                                </div>


                                                                <div class=""form-row mb-20"">
                                                                    <div class=""col-md-6"">
                                                                        <label for=""ddlpackagesubservice"">Sub Service</label>
                                                                        <select class=""form-control"" id=""ddlpackagesubservice"" required>
                                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5633228", async() => {
                    WriteLiteral("Select Sub Service");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                                        </select>
                                                                    </div>
                                                                    <div class=""col-md-6"">
                                                                        <label for=""txtpackagename"">Package Name</label>
                                                                        <input type=""text"" id=""txtpackagename"" name=""txtpackagename"" class=""form-control thresold-i"" maxlength=""250"" required />
                                                                    </div>

                                                                </div>
                                                                <div class=""form-row mb-20"">
                                                                    <div class=""col-md-6"">
                                                                        <label for=""txtpackagerate"">Package Rate</label");
                WriteLiteral(@">
                                                                        <input type=""text"" id=""txtpackagerate"" name=""txtpackagerate"" data-parsley-type=""digits"" class=""form-control thresold-i"" maxlength=""7"" required />
                                                                    </div>
                                                                    <div class=""col-md-6"">
                                                                        <label for=""inputEmail4"">
                                                                            Package Duration
                                                                            Type
                                                                        </label>
                                                                        <select id=""ddlpackagetimetype"" class=""form-control"" required>
                                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5636311", async() => {
                    WriteLiteral("Select Time Type");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5637621", async() => {
                    WriteLiteral("In Mintues");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5638925", async() => {
                    WriteLiteral("In Hours");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5640227", async() => {
                    WriteLiteral("In Days");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5641528", async() => {
                    WriteLiteral("Slots");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                                        </select>
                                                                    </div>

                                                                </div>
                                                                <div class=""row"">
                                                                    <div class=""col-md-6"">
                                                                        <label id=""labelpackageduration"" for=""txtpackageduration"">Package Duration</label>
                                                                        <input type=""text"" id=""txtpackageduration"" name=""txtpackageduration"" data-parsley-type=""digits"" class=""form-control thresold-i"" maxlength=""4"" required />
                                                                    </div>
                                                                    <div class=""col-md-8"">
                                                               ");
                WriteLiteral("         <label>Service Mode</label>\r\n                                                                        <div class=\"form-group radio-bnt-wrap\">\r\n                                                                            <div class=\"form-check\">\r\n");
                WriteLiteral(@"                                                                                <input class=""form-check-input"" type=""radio"" name=""homeservice"" id=""radio-homeservice-1"" value=""At Venue"" checked>
                                                                                <label class=""form-check-label"" for=""exampleRadios1"">
                                                                                    At Venue
                                                                                </label>
                                                                            </div>
                                                                            <div class=""form-check"">
                                                                                <input class=""form-check-input"" type=""radio"" name=""homeservice"" id=""radio-homeservice-2"" value=""At Home"">
                                                                                <label class=""form-check-label"" for=""exampleRadios2"">
 ");
                WriteLiteral(@"                                                                                   At Home
                                                                                </label>
                                                                            </div>
                                                                        </div>
                                                                        <div class=""row"">
                                                                            <div class=""col-md-12"">
                                                                                <div class=""form-group"">
                                                                                    <label for=""txtpackagedescription"">Package Description</label>
                                                                                    <textarea class=""form-control thresold-i"" id=""txtpackagedescription"" maxlength=""500""></textarea>
                                                  ");
                WriteLiteral(@"                              </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class=""col-md-4"">
                                                                        <div class=""avatar-upload"">
                                                                            <label for=""exampleFormControlTextarea1"">
                                                                                Upload
                                                                                Image
                                                                            </label>
                                                                            <div class=""avatar-edit"">

                                                                    ");
                WriteLiteral(@"            <input type='file' id=""packageimage1"" accept="".png, .jpg, .jpeg"" />
                                                                                <label for=""imageUpload""></label>
                                                                            </div>
                                                                            <div class=""avatar-preview"">
                                                                                <div id=""packagephoto1"" style=""        background: url(/vendor/images/photo.jpg)no-repeat;"">
                                                                                </div>
                                                                            </div>
                                                                        </div>

                                                                    </div>
                                                                </div>
                                                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                        </div>
                                                        <div class=""modal-footer pb-40"">
                                                            <button type=""button"" class=""btn btn--third mr-20 mr-0"" id=""btnVendorPackageSave"">Confirm</button>
                                                            <button type=""button"" class=""btn btn--third mr-auto"" data-dismiss=""modal"">Cancel</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- Add Package end -->
                                        </div>
                                        <div class=""table-responsive mt-40"">
                                            <table class=""table table-striped"" id=""tbl_vendorpackagelist"">
                     ");
            WriteLiteral(@"                           <thead>
                                                    <tr>
                                                        <th>Sl.no</th>
                                                        <th></th>
                                                        <th>Main Category</th>
                                                        <th>Main Service</th>
                                                        <th>Sub Service</th>
                                                        <th>Package Name</th>
                                                        <th>Package Rate</th>
                                                        <th>Status</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
");
            WriteLiteral(@"                                            </table>
                                        </div>
                                        <ul class=""pagination mt-30"">
                                            <li class=""page-item disabled"">
                                                <a class=""page-link"" href=""#"">
                                                    <
                                                </a>
                                            </li>
                                            <li class=""page-item active""><a class=""page-link"" href=""#"">1</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""#"">2</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""#"">3</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""#"">...</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""");
            WriteLiteral(@"#"">10</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""#""> > </a></li>
                                        </ul>
                                    </div>
                                    <div class=""tab-pane fade"" id=""profile"" role=""tabpanel"" aria-labelledby=""profile-tab"">
                                        <div class=""row mt-30"">
                                            <div class=""col-md-1"">
                                                <div class=""form-group"">
                                                    <label>Show Records</label>
                                                    <select class=""form-control"" id=""em2"">
                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5653258", async() => {
                WriteLiteral("10");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5654269", async() => {
                WriteLiteral("20");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5655280", async() => {
                WriteLiteral("30");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5656291", async() => {
                WriteLiteral("40");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5657302", async() => {
                WriteLiteral("50");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                    </select>
                                                </div>
                                            </div>
                                            <div class=""col-md-2"">
                                                <div class=""form-group"">
                                                    <label>Select Service</label>
                                                    <select class=""form-control"" id=""em2"">
                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5658808", async() => {
                WriteLiteral("10");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5659819", async() => {
                WriteLiteral("20");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5660830", async() => {
                WriteLiteral("30");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5661841", async() => {
                WriteLiteral("40");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5662852", async() => {
                WriteLiteral("50");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                    </select>
                                                </div>
                                            </div>
                                            <div class=""col-md-2 ml-auto"">
                                                <div class=""form-group mt-25"">
                                                    <input type=""text"" class=""form-control"" placeholder=""Search..."">
                                                </div>
                                            </div>
                                            <div class=""col-md-2"">
                                                <a href=""#"" class=""btn btn--four float-right mt-20"" data-toggle=""modal"" data-target="".request-sub-service""><span class=""plus"">+</span> Request New</a>
                                            </div>
                                            <!-- Request Sub Service Modal -->
                                            <div class=""modal fade re");
            WriteLiteral(@"quest-sub-service"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myLargeModalLabel"" aria-hidden=""true"">
                                                <div class=""modal-dialog modal-lg modal-dialog-centered"">
                                                    <div class=""modal-content"">
                                                        <div class=""modal-header"">
                                                            <h5 class=""modal-title pt-20"" id=""exampleModalLongTitle"">
                                                                Request Sub Service
                                                            </h5>
                                                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                                                <span aria-hidden=""true"">&times;</span>
                                                            </button>
                                                        </div>");
            WriteLiteral("\n                                                        <div class=\"modal-body\">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5666115", async() => {
                WriteLiteral(@"
                                                                <div class=""form-row mb-20"">
                                                                    <div class=""col-md-6"">
                                                                        <label for=""inputEmail4"">Service</label>
                                                                        <input type=""text"" class=""form-control"" placeholder=""Type here"">
                                                                    </div>
                                                                    <div class=""col-md-6"">
                                                                        <label for=""inputEmail4"">Sub Service</label>
                                                                        <input type=""text"" class=""form-control"" placeholder=""Type here"">
                                                                    </div>
                                                                </div>
            ");
                WriteLiteral(@"                                                    <div class=""form-row mb-20"">
                                                                    <div class=""col-md-4"">
                                                                        <div class=""avatar-upload"">
                                                                            <label for=""exampleFormControlTextarea1"">
                                                                                Upload
                                                                                Image
                                                                            </label>
                                                                            <div class=""avatar-edit"">
                                                                                <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                                                <label for=""imageUpload""></label>
    ");
                WriteLiteral(@"                                                                        </div>
                                                                            <div class=""avatar-preview"">
                                                                                <div id=""imagePreview"" style=""        background: url(/vendor/images/photo.jpg)no-repeat;"">
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                        </div>
                                                        <div class=""modal-footer pb-40"">
                                                            <button type=""button"" class=""btn btn--third mr-20 mr-0"">Confirm</button>
                                                            <button type=""button"" class=""btn btn--third mr-auto"" data-dismiss=""modal"">Cancel</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- Request Sub Service Modal -->
                                        </div>
                                        <div class=""table-responsive mt-40"">
                                            <table class=""table table-striped"" id=""editableTable"">
                                             ");
            WriteLiteral(@"   <thead>
                                                    <tr>
                                                        <th></th>
                                                        <th></th>
                                                        <th>Sub Service Name</th>
                                                        <th>Service Name</th>
                                                        <th>Status</th>
                                                        <th>Description</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                    ");
            WriteLiteral(@"                                        <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                                    <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: url(/vendor/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                    ");
            WriteLiteral(@"                                    <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td data-field=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                                            </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                         ");
            WriteLiteral(@"               </td>
                                                    </tr>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                                                            <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                                    <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: u");
            WriteLiteral(@"rl(/vendor/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td data-field=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                        ");
            WriteLiteral(@"                    </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                                        </td>
                                                    </tr>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                                                            <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                               ");
            WriteLiteral(@"                     <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: url(/vendor/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td da");
            WriteLiteral(@"ta-field=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                                            </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                                        </td>
                                                    </tr>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                     ");
            WriteLiteral(@"                                       <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                                    <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: url(/vendor/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                     ");
            WriteLiteral(@"                                   <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td data-field=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                                            </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                          ");
            WriteLiteral(@"              </td>
                                                    </tr>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                                                            <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                                    <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: ur");
            WriteLiteral(@"l(/vendor/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td data-field=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                         ");
            WriteLiteral(@"                   </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                                        </td>
                                                    </tr>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                                                            <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                ");
            WriteLiteral(@"                    <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: url(/vendor/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td dat");
            WriteLiteral(@"a-field=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                                            </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                                        </td>
                                                    </tr>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                      ");
            WriteLiteral(@"                                      <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                                    <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: url(/vendor/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                      ");
            WriteLiteral(@"                                  <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td data-field=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                                            </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                           ");
            WriteLiteral(@"             </td>
                                                    </tr>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                                                            <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                                    <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: url");
            WriteLiteral(@"(/vendor/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td data-field=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                          ");
            WriteLiteral(@"                  </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                        <ul class=""pagination mt-30"">
                                            <li class=""page-item disabled"">
                                                <a class=""page-link"" href=""#"">
                                                    <
                                                </a>
                                            </li>
                                            <li class=""p");
            WriteLiteral(@"age-item active""><a class=""page-link"" href=""#"">1</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""#"">2</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""#"">3</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""#"">...</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""#"">10</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""#""> > </a></li>
                                        </ul>
                                    </div>
                                    <div class=""tab-pane fade"" id=""services"" role=""tabpanel"" aria-labelledby=""home-tab"">
                                        <div class=""row mt-30"">
                                            <div class=""col-md-1"">
                                                <div class=""form-group"">
");
            WriteLiteral("                                                    <label>Show Records</label>\r\n                                                    <select class=\"form-control\" id=\"em2\">\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5694220", async() => {
                WriteLiteral("10");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5695231", async() => {
                WriteLiteral("20");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5696242", async() => {
                WriteLiteral("30");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5697253", async() => {
                WriteLiteral("40");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5698264", async() => {
                WriteLiteral("50");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                    </select>
                                                </div>
                                            </div>
                                            <div class=""col-md-2"">
                                                <div class=""form-group"">
                                                    <label>Select Category</label>
                                                    <select class=""form-control"" id=""em2"">
                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc5699771", async() => {
                WriteLiteral("10");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc56100782", async() => {
                WriteLiteral("20");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc56101794", async() => {
                WriteLiteral("30");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc56102806", async() => {
                WriteLiteral("40");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc56103818", async() => {
                WriteLiteral("50");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                    </select>
                                                </div>
                                            </div>
                                            <div class=""col-md-2 ml-auto"">
                                                <div class=""form-group mt-25"">
                                                    <input type=""text"" class=""form-control"" placeholder=""Search..."">
                                                </div>
                                            </div>
                                            <div class=""col-md-2"">
                                                <a href=""#"" class=""btn btn--four float-right mt-20"" data-toggle=""modal"" data-target="".request-service""><span class=""plus"">+</span> Request New</a>
                                            </div>
                                            <!-- Request Service Modal -->
                                            <div class=""modal fade request-se");
            WriteLiteral(@"rvice"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myLargeModalLabel"" aria-hidden=""true"">
                                                <div class=""modal-dialog modal-lg modal-dialog-centered"">
                                                    <div class=""modal-content"">
                                                        <div class=""modal-header"">
                                                            <h5 class=""modal-title pt-20"" id=""exampleModalLongTitle"">
                                                                Request Service
                                                            </h5>
                                                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                                                <span aria-hidden=""true"">&times;</span>
                                                            </button>
                                                        </div>
               ");
            WriteLiteral("                                         <div class=\"modal-body\">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc56107065", async() => {
                WriteLiteral(@"
                                                                <div class=""form-row mb-20"">
                                                                    <div class=""col-md-6"">
                                                                        <label for=""inputEmail4"">Service</label>
                                                                        <input type=""text"" class=""form-control"" placeholder=""Type here"">
                                                                    </div>
                                                                    <div class=""col-md-6"">
                                                                        <label for=""inputEmail4"">Sub Service</label>
                                                                        <input type=""text"" class=""form-control"" placeholder=""Type here"">
                                                                    </div>
                                                                </div>
            ");
                WriteLiteral(@"                                                    <div class=""form-row mb-20"">
                                                                    <div class=""col-md-4"">
                                                                        <div class=""avatar-upload"">
                                                                            <label for=""exampleFormControlTextarea1"">
                                                                                Upload
                                                                                Image
                                                                            </label>
                                                                            <div class=""avatar-edit"">
                                                                                <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                                                <label for=""imageUpload""></label>
    ");
                WriteLiteral(@"                                                                        </div>
                                                                            <div class=""avatar-preview"">
                                                                                <div id=""imagePreview"" style=""        background: url(/vendor/images/photo.jpg)no-repeat;"">
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                        </div>
                                                        <div class=""modal-footer pb-40"">
                                                            <button type=""button"" class=""btn btn--third mr-20 mr-0"">Confirm</button>
                                                            <button type=""button"" class=""btn btn--third mr-auto"" data-dismiss=""modal"">Cancel</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- Request Service Modal -->
                                        </div>
                                        <div class=""table-responsive mt-40"">
                                            <table class=""table table-striped"" id=""editableTable"">
                                                <");
            WriteLiteral(@"thead>
                                                    <tr>
                                                        <th></th>
                                                        <th></th>
                                                        <th>Service Name</th>
                                                        <th>Category Name</th>
                                                        <th>Status</th>
                                                        <th>Description</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                           ");
            WriteLiteral(@"                                 <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                                    <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: url(/vendor/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                           ");
            WriteLiteral(@"                             <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td data-field=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                                            </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                                ");
            WriteLiteral(@"        </td>
                                                    </tr>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                                                            <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                                    <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: url(/ven");
            WriteLiteral(@"dor/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td data-field=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                               ");
            WriteLiteral(@"             </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                                        </td>
                                                    </tr>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                                                            <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                      ");
            WriteLiteral(@"              <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: url(/vendor/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td data-fiel");
            WriteLiteral(@"d=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                                            </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                                        </td>
                                                    </tr>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                            ");
            WriteLiteral(@"                                <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                                    <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: url(/vendor/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                            ");
            WriteLiteral(@"                            <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td data-field=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                                            </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                                 ");
            WriteLiteral(@"       </td>
                                                    </tr>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                                                            <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                                    <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: url(/vend");
            WriteLiteral(@"or/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td data-field=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                                ");
            WriteLiteral(@"            </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                                        </td>
                                                    </tr>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                                                            <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                       ");
            WriteLiteral(@"             <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: url(/vendor/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td data-field");
            WriteLiteral(@"=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                                            </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                                        </td>
                                                    </tr>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                             ");
            WriteLiteral(@"                               <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                                    <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: url(/vendor/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                             ");
            WriteLiteral(@"                           <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td data-field=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                                            </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                                  ");
            WriteLiteral(@"      </td>
                                                    </tr>
                                                    <tr data-id=""1"">
                                                        <td class=""text-center"">1</td>
                                                        <td class=""table-image"">
                                                            <div class=""avatar-upload"">
                                                                <div class=""avatar-edit"">
                                                                    <input type='file' id=""imageUpload"" accept="".png, .jpg, .jpeg"" />
                                                                    <label for=""imageUpload""></label>
                                                                </div>
                                                                <div class=""avatar-preview"">
                                                                    <div id=""imagePreview"" style=""        background: url(/vendo");
            WriteLiteral(@"r/images/photo.jpg)no-repeat;"">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td data-field=""name"">Hair</td>
                                                        <td data-field=""name"">Beauty Parlour</td>
                                                        <td data-field=""status"" class=""link-green"">Active</td>
                                                        <td data-field=""name"">Lorem Ipsum</td>
                                                        <td>
                                                            <a class=""button button-small edit"" title=""Edit"">
                                                                <i class=""fa fa-pencil""></i>
                                                 ");
            WriteLiteral(@"           </a>

                                                            <a class=""button button-small edit"" title=""Delete"">
                                                                <i class=""fa fa-trash""></i>
                                                            </a>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                        <ul class=""pagination mt-30"">
                                            <li class=""page-item disabled"">
                                                <a class=""page-link"" href=""#"">
                                                    <
                                                </a>
                                            </li>
                                            <li class=""page-ite");
            WriteLiteral(@"m active""><a class=""page-link"" href=""#"">1</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""#"">2</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""#"">3</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""#"">...</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""#"">10</a></li>
                                            <li class=""page-item""><a class=""page-link"" href=""#""> > </a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Appointment Information -->
                </div>
            </div>
        </div>
    </div>
</main>
");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        // Table Search
        function myFunction() {
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById(""myInput"");
            filter = input.value.toUpperCase();
            table = document.getElementById(""myTable"");
            tr = table.getElementsByTagName(""tr"");
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName(""td"")[0];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = """";
                    } else {
                        tr[i].style.display = ""none"";
                    }
                }
            }
        }

        (function ($, window, document, undefined) {
            var pluginName = ""editable"",
                defaults = {
                    keyboard: true,
                    dblclick: true,
");
                WriteLiteral(@"                    button: true,
                    buttonSelector: "".edit"",
                    maintainWidth: true,
                    dropdowns: {},
                    edit: function () { },
                    save: function () { },
                    cancel: function () { }
                };

            function editable(element, options) {
                this.element = element;
                this.options = $.extend({}, defaults, options);

                this._defaults = defaults;
                this._name = pluginName;

                this.init();
            }

            editable.prototype = {
                init: function () {
                    this.editing = false;

                    if (this.options.dblclick) {
                        $(this.element)
                            .css('cursor', 'pointer')
                            .bind('dblclick', this.toggle.bind(this));
                    }

                    if (this.options.button) {
       ");
                WriteLiteral(@"                 $(this.options.buttonSelector, this.element)
                            .bind('click', this.toggle.bind(this));
                    }
                },

                toggle: function (e) {
                    e.preventDefault();

                    this.editing = !this.editing;

                    if (this.editing) {
                        this.edit();
                    } else {
                        this.save();
                    }
                },

                edit: function () {
                    var instance = this,
                        values = {};

                    $('td[data-field]', this.element).each(function () {
                        var input,
                            field = $(this).data('field'),
                            value = $(this).text(),
                            width = $(this).width();

                        values[field] = value;

                        $(this).empty();

                        if ");
                WriteLiteral(@"(instance.options.maintainWidth) {
                            $(this).width(width);
                        }

                        if (field in instance.options.dropdowns) {
                            input = $('<select></select>');

                            for (var i = 0; i < instance.options.dropdowns[field].length; i++) {
                                $('<option></option>')
                                    .text(instance.options.dropdowns[field][i])
                                    .appendTo(input);
                            };

                            input.val(value)
                                .data('old-value', value)
                                .dblclick(instance._captureEvent);
                        } else {
                            input = $('<input type=""text"" />')
                                .val(value)
                                .data('old-value', value)
                                .dblclick(instance._captureEvent);
          ");
                WriteLiteral(@"              }

                        input.appendTo(this);

                        if (instance.options.keyboard) {
                            input.keydown(instance._captureKey.bind(instance));
                        }
                    });

                    this.options.edit.bind(this.element)(values);
                },

                save: function () {
                    var instance = this,
                        values = {};

                    $('td[data-field]', this.element).each(function () {
                        var value = $(':input', this).val();

                        values[$(this).data('field')] = value;

                        $(this).empty()
                            .text(value);
                    });

                    this.options.save.bind(this.element)(values);
                },

                cancel: function () {
                    var instance = this,
                        values = {};

                    $('td[data");
                WriteLiteral(@"-field]', this.element).each(function () {
                        var value = $(':input', this).data('old-value');

                        values[$(this).data('field')] = value;

                        $(this).empty()
                            .text(value);
                    });

                    this.options.cancel.bind(this.element)(values);
                },

                _captureEvent: function (e) {
                    e.stopPropagation();
                },

                _captureKey: function (e) {
                    if (e.which === 13) {
                        this.editing = false;
                        this.save();
                    } else if (e.which === 27) {
                        this.editing = false;
                        this.cancel();
                    }
                }
            };

            $.fn[pluginName] = function (options) {
                return this.each(function () {
                    if (!$.data(this, ""plugin_"" + plug");
                WriteLiteral(@"inName)) {
                        $.data(this, ""plugin_"" + pluginName,
                            new editable(this, options));
                    }
                });
            };

        })(jQuery, window, document);

        editTable();

        //custome editable starts
        function editTable() {

            $(function () {
                var pickers = {};

                $('table tr').editable({
                    dropdowns: {
                        status: ['Active', 'Inactive']
                    },
                    edit: function (values) {
                        $("".edit i"", this)
                            .removeClass('fa-pencil')
                            .addClass('fa-save')
                            .attr('title', 'Save');

                        pickers[this] = new Pikaday({
                            field: $(""td[data-field=birthday] input"", this)[0],
                            format: 'MMM D, YYYY'
                        });
      ");
                WriteLiteral(@"              },
                    save: function (values) {
                        $("".edit i"", this)
                            .removeClass('fa-save')
                            .addClass('fa-pencil')
                            .attr('title', 'Edit');

                        if (this in pickers) {
                            pickers[this].destroy();
                            delete pickers[this];
                        }
                    },
                    cancel: function (values) {
                        $("".edit i"", this)
                            .removeClass('fa-save')
                            .addClass('fa-pencil')
                            .attr('title', 'Edit');

                        if (this in pickers) {
                            pickers[this].destroy();
                            delete pickers[this];
                        }
                    }
                });
            });

        }

                //$("".add-row"").click(func");
                WriteLiteral(@"tion () {
                //    $(""#editableTable"").find(""tbody tr:first"").before(""<tr><td data-field='name'></td><td data-field='name'></td><td data-field='name'></td><td data-field='name'></td><td><a class='button button-small edit' title='Edit'><i class='fa fa-pencil'></i></a> <a class='button button-small' title='Delete'><i class='fa fa-trash'></i></a></td></tr>"");
                //    editTable();
                //    setTimeout(function () {
                //        $(""#editableTable"").find(""tbody tr:first td:last a[title='Edit']"").click();
                //    }, 200);

                //    setTimeout(function () {
                //        $(""#editableTable"").find(""tbody tr:first td:first input[type='text']"").focus();
                //    }, 300);

                //    $(""#editableTable"").find(""a[title='Delete']"").unbind('click').click(function (e) {
                //        $(this).closest(""tr"").remove();
                //    });

              //  });

        function myFu");
                WriteLiteral(@"nction() {

        }

        //$(""#editableTable"").find(""a[title='Delete']"").click(function (e) {
        $(""#tbl_vendorpackagelist"").find(""a[title='Delete']"").click(function (e) {
            var x;
            if (confirm(""Are you sure you want to delete entire row?"") == true) {
                $(this).closest(""tr"").remove();
            } else {

            }
        });

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imagePreview').css('background-image', 'url(' + e.target.result + ')');
                    $('#imagePreview').hide();
                    $('#imagePreview').fadeIn(650);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }
        $(""#imageUpload"").change(function () {
            readURL(this);
        });
    </script>


    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f670401140d022cd7d6236037d106b79acefc56145507", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
